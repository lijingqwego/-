package cn.com.user.pojo;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class TExaPaperExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_EXA_PAPER
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_EXA_PAPER
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_EXA_PAPER
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_PAPER
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public TExaPaperExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_PAPER
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_PAPER
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_PAPER
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_PAPER
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_PAPER
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_PAPER
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_PAPER
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_PAPER
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_PAPER
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_PAPER
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_EXA_PAPER
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andExaminationNoIsNull() {
            addCriterion("EXAMINATION_NO is null");
            return (Criteria) this;
        }

        public Criteria andExaminationNoIsNotNull() {
            addCriterion("EXAMINATION_NO is not null");
            return (Criteria) this;
        }

        public Criteria andExaminationNoEqualTo(String value) {
            addCriterion("EXAMINATION_NO =", value, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoNotEqualTo(String value) {
            addCriterion("EXAMINATION_NO <>", value, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoGreaterThan(String value) {
            addCriterion("EXAMINATION_NO >", value, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoGreaterThanOrEqualTo(String value) {
            addCriterion("EXAMINATION_NO >=", value, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoLessThan(String value) {
            addCriterion("EXAMINATION_NO <", value, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoLessThanOrEqualTo(String value) {
            addCriterion("EXAMINATION_NO <=", value, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoLike(String value) {
            addCriterion("EXAMINATION_NO like", value, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoNotLike(String value) {
            addCriterion("EXAMINATION_NO not like", value, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoIn(List<String> values) {
            addCriterion("EXAMINATION_NO in", values, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoNotIn(List<String> values) {
            addCriterion("EXAMINATION_NO not in", values, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoBetween(String value1, String value2) {
            addCriterion("EXAMINATION_NO between", value1, value2, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoNotBetween(String value1, String value2) {
            addCriterion("EXAMINATION_NO not between", value1, value2, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationTypeIsNull() {
            addCriterion("EXAMINATION_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andExaminationTypeIsNotNull() {
            addCriterion("EXAMINATION_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andExaminationTypeEqualTo(BigDecimal value) {
            addCriterion("EXAMINATION_TYPE =", value, "examinationType");
            return (Criteria) this;
        }

        public Criteria andExaminationTypeNotEqualTo(BigDecimal value) {
            addCriterion("EXAMINATION_TYPE <>", value, "examinationType");
            return (Criteria) this;
        }

        public Criteria andExaminationTypeGreaterThan(BigDecimal value) {
            addCriterion("EXAMINATION_TYPE >", value, "examinationType");
            return (Criteria) this;
        }

        public Criteria andExaminationTypeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("EXAMINATION_TYPE >=", value, "examinationType");
            return (Criteria) this;
        }

        public Criteria andExaminationTypeLessThan(BigDecimal value) {
            addCriterion("EXAMINATION_TYPE <", value, "examinationType");
            return (Criteria) this;
        }

        public Criteria andExaminationTypeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("EXAMINATION_TYPE <=", value, "examinationType");
            return (Criteria) this;
        }

        public Criteria andExaminationTypeIn(List<BigDecimal> values) {
            addCriterion("EXAMINATION_TYPE in", values, "examinationType");
            return (Criteria) this;
        }

        public Criteria andExaminationTypeNotIn(List<BigDecimal> values) {
            addCriterion("EXAMINATION_TYPE not in", values, "examinationType");
            return (Criteria) this;
        }

        public Criteria andExaminationTypeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EXAMINATION_TYPE between", value1, value2, "examinationType");
            return (Criteria) this;
        }

        public Criteria andExaminationTypeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EXAMINATION_TYPE not between", value1, value2, "examinationType");
            return (Criteria) this;
        }

        public Criteria andExaminationNameIsNull() {
            addCriterion("EXAMINATION_NAME is null");
            return (Criteria) this;
        }

        public Criteria andExaminationNameIsNotNull() {
            addCriterion("EXAMINATION_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andExaminationNameEqualTo(String value) {
            addCriterion("EXAMINATION_NAME =", value, "examinationName");
            return (Criteria) this;
        }

        public Criteria andExaminationNameNotEqualTo(String value) {
            addCriterion("EXAMINATION_NAME <>", value, "examinationName");
            return (Criteria) this;
        }

        public Criteria andExaminationNameGreaterThan(String value) {
            addCriterion("EXAMINATION_NAME >", value, "examinationName");
            return (Criteria) this;
        }

        public Criteria andExaminationNameGreaterThanOrEqualTo(String value) {
            addCriterion("EXAMINATION_NAME >=", value, "examinationName");
            return (Criteria) this;
        }

        public Criteria andExaminationNameLessThan(String value) {
            addCriterion("EXAMINATION_NAME <", value, "examinationName");
            return (Criteria) this;
        }

        public Criteria andExaminationNameLessThanOrEqualTo(String value) {
            addCriterion("EXAMINATION_NAME <=", value, "examinationName");
            return (Criteria) this;
        }

        public Criteria andExaminationNameLike(String value) {
            addCriterion("EXAMINATION_NAME like", value, "examinationName");
            return (Criteria) this;
        }

        public Criteria andExaminationNameNotLike(String value) {
            addCriterion("EXAMINATION_NAME not like", value, "examinationName");
            return (Criteria) this;
        }

        public Criteria andExaminationNameIn(List<String> values) {
            addCriterion("EXAMINATION_NAME in", values, "examinationName");
            return (Criteria) this;
        }

        public Criteria andExaminationNameNotIn(List<String> values) {
            addCriterion("EXAMINATION_NAME not in", values, "examinationName");
            return (Criteria) this;
        }

        public Criteria andExaminationNameBetween(String value1, String value2) {
            addCriterion("EXAMINATION_NAME between", value1, value2, "examinationName");
            return (Criteria) this;
        }

        public Criteria andExaminationNameNotBetween(String value1, String value2) {
            addCriterion("EXAMINATION_NAME not between", value1, value2, "examinationName");
            return (Criteria) this;
        }

        public Criteria andExaminationContentIsNull() {
            addCriterion("EXAMINATION_CONTENT is null");
            return (Criteria) this;
        }

        public Criteria andExaminationContentIsNotNull() {
            addCriterion("EXAMINATION_CONTENT is not null");
            return (Criteria) this;
        }

        public Criteria andExaminationContentEqualTo(String value) {
            addCriterion("EXAMINATION_CONTENT =", value, "examinationContent");
            return (Criteria) this;
        }

        public Criteria andExaminationContentNotEqualTo(String value) {
            addCriterion("EXAMINATION_CONTENT <>", value, "examinationContent");
            return (Criteria) this;
        }

        public Criteria andExaminationContentGreaterThan(String value) {
            addCriterion("EXAMINATION_CONTENT >", value, "examinationContent");
            return (Criteria) this;
        }

        public Criteria andExaminationContentGreaterThanOrEqualTo(String value) {
            addCriterion("EXAMINATION_CONTENT >=", value, "examinationContent");
            return (Criteria) this;
        }

        public Criteria andExaminationContentLessThan(String value) {
            addCriterion("EXAMINATION_CONTENT <", value, "examinationContent");
            return (Criteria) this;
        }

        public Criteria andExaminationContentLessThanOrEqualTo(String value) {
            addCriterion("EXAMINATION_CONTENT <=", value, "examinationContent");
            return (Criteria) this;
        }

        public Criteria andExaminationContentLike(String value) {
            addCriterion("EXAMINATION_CONTENT like", value, "examinationContent");
            return (Criteria) this;
        }

        public Criteria andExaminationContentNotLike(String value) {
            addCriterion("EXAMINATION_CONTENT not like", value, "examinationContent");
            return (Criteria) this;
        }

        public Criteria andExaminationContentIn(List<String> values) {
            addCriterion("EXAMINATION_CONTENT in", values, "examinationContent");
            return (Criteria) this;
        }

        public Criteria andExaminationContentNotIn(List<String> values) {
            addCriterion("EXAMINATION_CONTENT not in", values, "examinationContent");
            return (Criteria) this;
        }

        public Criteria andExaminationContentBetween(String value1, String value2) {
            addCriterion("EXAMINATION_CONTENT between", value1, value2, "examinationContent");
            return (Criteria) this;
        }

        public Criteria andExaminationContentNotBetween(String value1, String value2) {
            addCriterion("EXAMINATION_CONTENT not between", value1, value2, "examinationContent");
            return (Criteria) this;
        }

        public Criteria andSubjectNoIsNull() {
            addCriterion("SUBJECT_NO is null");
            return (Criteria) this;
        }

        public Criteria andSubjectNoIsNotNull() {
            addCriterion("SUBJECT_NO is not null");
            return (Criteria) this;
        }

        public Criteria andSubjectNoEqualTo(BigDecimal value) {
            addCriterion("SUBJECT_NO =", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoNotEqualTo(BigDecimal value) {
            addCriterion("SUBJECT_NO <>", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoGreaterThan(BigDecimal value) {
            addCriterion("SUBJECT_NO >", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SUBJECT_NO >=", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoLessThan(BigDecimal value) {
            addCriterion("SUBJECT_NO <", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SUBJECT_NO <=", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoIn(List<BigDecimal> values) {
            addCriterion("SUBJECT_NO in", values, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoNotIn(List<BigDecimal> values) {
            addCriterion("SUBJECT_NO not in", values, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SUBJECT_NO between", value1, value2, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SUBJECT_NO not between", value1, value2, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andExamLengthIsNull() {
            addCriterion("EXAM_LENGTH is null");
            return (Criteria) this;
        }

        public Criteria andExamLengthIsNotNull() {
            addCriterion("EXAM_LENGTH is not null");
            return (Criteria) this;
        }

        public Criteria andExamLengthEqualTo(BigDecimal value) {
            addCriterion("EXAM_LENGTH =", value, "examLength");
            return (Criteria) this;
        }

        public Criteria andExamLengthNotEqualTo(BigDecimal value) {
            addCriterion("EXAM_LENGTH <>", value, "examLength");
            return (Criteria) this;
        }

        public Criteria andExamLengthGreaterThan(BigDecimal value) {
            addCriterion("EXAM_LENGTH >", value, "examLength");
            return (Criteria) this;
        }

        public Criteria andExamLengthGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("EXAM_LENGTH >=", value, "examLength");
            return (Criteria) this;
        }

        public Criteria andExamLengthLessThan(BigDecimal value) {
            addCriterion("EXAM_LENGTH <", value, "examLength");
            return (Criteria) this;
        }

        public Criteria andExamLengthLessThanOrEqualTo(BigDecimal value) {
            addCriterion("EXAM_LENGTH <=", value, "examLength");
            return (Criteria) this;
        }

        public Criteria andExamLengthIn(List<BigDecimal> values) {
            addCriterion("EXAM_LENGTH in", values, "examLength");
            return (Criteria) this;
        }

        public Criteria andExamLengthNotIn(List<BigDecimal> values) {
            addCriterion("EXAM_LENGTH not in", values, "examLength");
            return (Criteria) this;
        }

        public Criteria andExamLengthBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EXAM_LENGTH between", value1, value2, "examLength");
            return (Criteria) this;
        }

        public Criteria andExamLengthNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EXAM_LENGTH not between", value1, value2, "examLength");
            return (Criteria) this;
        }

        public Criteria andStateIsNull() {
            addCriterion("STATE is null");
            return (Criteria) this;
        }

        public Criteria andStateIsNotNull() {
            addCriterion("STATE is not null");
            return (Criteria) this;
        }

        public Criteria andStateEqualTo(BigDecimal value) {
            addCriterion("STATE =", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotEqualTo(BigDecimal value) {
            addCriterion("STATE <>", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateGreaterThan(BigDecimal value) {
            addCriterion("STATE >", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("STATE >=", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLessThan(BigDecimal value) {
            addCriterion("STATE <", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLessThanOrEqualTo(BigDecimal value) {
            addCriterion("STATE <=", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateIn(List<BigDecimal> values) {
            addCriterion("STATE in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotIn(List<BigDecimal> values) {
            addCriterion("STATE not in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("STATE between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("STATE not between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andCreateUserIsNull() {
            addCriterion("CREATE_USER is null");
            return (Criteria) this;
        }

        public Criteria andCreateUserIsNotNull() {
            addCriterion("CREATE_USER is not null");
            return (Criteria) this;
        }

        public Criteria andCreateUserEqualTo(String value) {
            addCriterion("CREATE_USER =", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotEqualTo(String value) {
            addCriterion("CREATE_USER <>", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThan(String value) {
            addCriterion("CREATE_USER >", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThanOrEqualTo(String value) {
            addCriterion("CREATE_USER >=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThan(String value) {
            addCriterion("CREATE_USER <", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThanOrEqualTo(String value) {
            addCriterion("CREATE_USER <=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLike(String value) {
            addCriterion("CREATE_USER like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotLike(String value) {
            addCriterion("CREATE_USER not like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserIn(List<String> values) {
            addCriterion("CREATE_USER in", values, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotIn(List<String> values) {
            addCriterion("CREATE_USER not in", values, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserBetween(String value1, String value2) {
            addCriterion("CREATE_USER between", value1, value2, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotBetween(String value1, String value2) {
            addCriterion("CREATE_USER not between", value1, value2, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("CREATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("CREATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIME =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIME <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("CREATE_TIME >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIME >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterionForJDBCDate("CREATE_TIME <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIME <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterionForJDBCDate("CREATE_TIME in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("CREATE_TIME not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_TIME between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_TIME not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("UPDATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("UPDATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_TIME =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_TIME <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("UPDATE_TIME >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_TIME >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterionForJDBCDate("UPDATE_TIME <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_TIME <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATE_TIME in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATE_TIME not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATE_TIME between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATE_TIME not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_EXA_PAPER
     *
     * @mbggenerated do_not_delete_during_merge Mon Aug 14 15:21:26 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_EXA_PAPER
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}