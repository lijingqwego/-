package cn.com.user.pojo;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TExaminationInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_EXAMINATION_INFO
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_EXAMINATION_INFO
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_EXAMINATION_INFO
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXAMINATION_INFO
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public TExaminationInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXAMINATION_INFO
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXAMINATION_INFO
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXAMINATION_INFO
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXAMINATION_INFO
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXAMINATION_INFO
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXAMINATION_INFO
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXAMINATION_INFO
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXAMINATION_INFO
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXAMINATION_INFO
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXAMINATION_INFO
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_EXAMINATION_INFO
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andExaminationInfoNoIsNull() {
            addCriterion("EXAMINATION_INFO_NO is null");
            return (Criteria) this;
        }

        public Criteria andExaminationInfoNoIsNotNull() {
            addCriterion("EXAMINATION_INFO_NO is not null");
            return (Criteria) this;
        }

        public Criteria andExaminationInfoNoEqualTo(String value) {
            addCriterion("EXAMINATION_INFO_NO =", value, "examinationInfoNo");
            return (Criteria) this;
        }

        public Criteria andExaminationInfoNoNotEqualTo(String value) {
            addCriterion("EXAMINATION_INFO_NO <>", value, "examinationInfoNo");
            return (Criteria) this;
        }

        public Criteria andExaminationInfoNoGreaterThan(String value) {
            addCriterion("EXAMINATION_INFO_NO >", value, "examinationInfoNo");
            return (Criteria) this;
        }

        public Criteria andExaminationInfoNoGreaterThanOrEqualTo(String value) {
            addCriterion("EXAMINATION_INFO_NO >=", value, "examinationInfoNo");
            return (Criteria) this;
        }

        public Criteria andExaminationInfoNoLessThan(String value) {
            addCriterion("EXAMINATION_INFO_NO <", value, "examinationInfoNo");
            return (Criteria) this;
        }

        public Criteria andExaminationInfoNoLessThanOrEqualTo(String value) {
            addCriterion("EXAMINATION_INFO_NO <=", value, "examinationInfoNo");
            return (Criteria) this;
        }

        public Criteria andExaminationInfoNoLike(String value) {
            addCriterion("EXAMINATION_INFO_NO like", value, "examinationInfoNo");
            return (Criteria) this;
        }

        public Criteria andExaminationInfoNoNotLike(String value) {
            addCriterion("EXAMINATION_INFO_NO not like", value, "examinationInfoNo");
            return (Criteria) this;
        }

        public Criteria andExaminationInfoNoIn(List<String> values) {
            addCriterion("EXAMINATION_INFO_NO in", values, "examinationInfoNo");
            return (Criteria) this;
        }

        public Criteria andExaminationInfoNoNotIn(List<String> values) {
            addCriterion("EXAMINATION_INFO_NO not in", values, "examinationInfoNo");
            return (Criteria) this;
        }

        public Criteria andExaminationInfoNoBetween(String value1, String value2) {
            addCriterion("EXAMINATION_INFO_NO between", value1, value2, "examinationInfoNo");
            return (Criteria) this;
        }

        public Criteria andExaminationInfoNoNotBetween(String value1, String value2) {
            addCriterion("EXAMINATION_INFO_NO not between", value1, value2, "examinationInfoNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoIsNull() {
            addCriterion("EXAMINATION_NO is null");
            return (Criteria) this;
        }

        public Criteria andExaminationNoIsNotNull() {
            addCriterion("EXAMINATION_NO is not null");
            return (Criteria) this;
        }

        public Criteria andExaminationNoEqualTo(String value) {
            addCriterion("EXAMINATION_NO =", value, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoNotEqualTo(String value) {
            addCriterion("EXAMINATION_NO <>", value, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoGreaterThan(String value) {
            addCriterion("EXAMINATION_NO >", value, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoGreaterThanOrEqualTo(String value) {
            addCriterion("EXAMINATION_NO >=", value, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoLessThan(String value) {
            addCriterion("EXAMINATION_NO <", value, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoLessThanOrEqualTo(String value) {
            addCriterion("EXAMINATION_NO <=", value, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoLike(String value) {
            addCriterion("EXAMINATION_NO like", value, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoNotLike(String value) {
            addCriterion("EXAMINATION_NO not like", value, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoIn(List<String> values) {
            addCriterion("EXAMINATION_NO in", values, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoNotIn(List<String> values) {
            addCriterion("EXAMINATION_NO not in", values, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoBetween(String value1, String value2) {
            addCriterion("EXAMINATION_NO between", value1, value2, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationNoNotBetween(String value1, String value2) {
            addCriterion("EXAMINATION_NO not between", value1, value2, "examinationNo");
            return (Criteria) this;
        }

        public Criteria andExaminationUserIsNull() {
            addCriterion("EXAMINATION_USER is null");
            return (Criteria) this;
        }

        public Criteria andExaminationUserIsNotNull() {
            addCriterion("EXAMINATION_USER is not null");
            return (Criteria) this;
        }

        public Criteria andExaminationUserEqualTo(String value) {
            addCriterion("EXAMINATION_USER =", value, "examinationUser");
            return (Criteria) this;
        }

        public Criteria andExaminationUserNotEqualTo(String value) {
            addCriterion("EXAMINATION_USER <>", value, "examinationUser");
            return (Criteria) this;
        }

        public Criteria andExaminationUserGreaterThan(String value) {
            addCriterion("EXAMINATION_USER >", value, "examinationUser");
            return (Criteria) this;
        }

        public Criteria andExaminationUserGreaterThanOrEqualTo(String value) {
            addCriterion("EXAMINATION_USER >=", value, "examinationUser");
            return (Criteria) this;
        }

        public Criteria andExaminationUserLessThan(String value) {
            addCriterion("EXAMINATION_USER <", value, "examinationUser");
            return (Criteria) this;
        }

        public Criteria andExaminationUserLessThanOrEqualTo(String value) {
            addCriterion("EXAMINATION_USER <=", value, "examinationUser");
            return (Criteria) this;
        }

        public Criteria andExaminationUserLike(String value) {
            addCriterion("EXAMINATION_USER like", value, "examinationUser");
            return (Criteria) this;
        }

        public Criteria andExaminationUserNotLike(String value) {
            addCriterion("EXAMINATION_USER not like", value, "examinationUser");
            return (Criteria) this;
        }

        public Criteria andExaminationUserIn(List<String> values) {
            addCriterion("EXAMINATION_USER in", values, "examinationUser");
            return (Criteria) this;
        }

        public Criteria andExaminationUserNotIn(List<String> values) {
            addCriterion("EXAMINATION_USER not in", values, "examinationUser");
            return (Criteria) this;
        }

        public Criteria andExaminationUserBetween(String value1, String value2) {
            addCriterion("EXAMINATION_USER between", value1, value2, "examinationUser");
            return (Criteria) this;
        }

        public Criteria andExaminationUserNotBetween(String value1, String value2) {
            addCriterion("EXAMINATION_USER not between", value1, value2, "examinationUser");
            return (Criteria) this;
        }

        public Criteria andRightNumIsNull() {
            addCriterion("RIGHT_NUM is null");
            return (Criteria) this;
        }

        public Criteria andRightNumIsNotNull() {
            addCriterion("RIGHT_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andRightNumEqualTo(BigDecimal value) {
            addCriterion("RIGHT_NUM =", value, "rightNum");
            return (Criteria) this;
        }

        public Criteria andRightNumNotEqualTo(BigDecimal value) {
            addCriterion("RIGHT_NUM <>", value, "rightNum");
            return (Criteria) this;
        }

        public Criteria andRightNumGreaterThan(BigDecimal value) {
            addCriterion("RIGHT_NUM >", value, "rightNum");
            return (Criteria) this;
        }

        public Criteria andRightNumGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("RIGHT_NUM >=", value, "rightNum");
            return (Criteria) this;
        }

        public Criteria andRightNumLessThan(BigDecimal value) {
            addCriterion("RIGHT_NUM <", value, "rightNum");
            return (Criteria) this;
        }

        public Criteria andRightNumLessThanOrEqualTo(BigDecimal value) {
            addCriterion("RIGHT_NUM <=", value, "rightNum");
            return (Criteria) this;
        }

        public Criteria andRightNumIn(List<BigDecimal> values) {
            addCriterion("RIGHT_NUM in", values, "rightNum");
            return (Criteria) this;
        }

        public Criteria andRightNumNotIn(List<BigDecimal> values) {
            addCriterion("RIGHT_NUM not in", values, "rightNum");
            return (Criteria) this;
        }

        public Criteria andRightNumBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RIGHT_NUM between", value1, value2, "rightNum");
            return (Criteria) this;
        }

        public Criteria andRightNumNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RIGHT_NUM not between", value1, value2, "rightNum");
            return (Criteria) this;
        }

        public Criteria andErrorNumIsNull() {
            addCriterion("ERROR_NUM is null");
            return (Criteria) this;
        }

        public Criteria andErrorNumIsNotNull() {
            addCriterion("ERROR_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andErrorNumEqualTo(BigDecimal value) {
            addCriterion("ERROR_NUM =", value, "errorNum");
            return (Criteria) this;
        }

        public Criteria andErrorNumNotEqualTo(BigDecimal value) {
            addCriterion("ERROR_NUM <>", value, "errorNum");
            return (Criteria) this;
        }

        public Criteria andErrorNumGreaterThan(BigDecimal value) {
            addCriterion("ERROR_NUM >", value, "errorNum");
            return (Criteria) this;
        }

        public Criteria andErrorNumGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ERROR_NUM >=", value, "errorNum");
            return (Criteria) this;
        }

        public Criteria andErrorNumLessThan(BigDecimal value) {
            addCriterion("ERROR_NUM <", value, "errorNum");
            return (Criteria) this;
        }

        public Criteria andErrorNumLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ERROR_NUM <=", value, "errorNum");
            return (Criteria) this;
        }

        public Criteria andErrorNumIn(List<BigDecimal> values) {
            addCriterion("ERROR_NUM in", values, "errorNum");
            return (Criteria) this;
        }

        public Criteria andErrorNumNotIn(List<BigDecimal> values) {
            addCriterion("ERROR_NUM not in", values, "errorNum");
            return (Criteria) this;
        }

        public Criteria andErrorNumBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ERROR_NUM between", value1, value2, "errorNum");
            return (Criteria) this;
        }

        public Criteria andErrorNumNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ERROR_NUM not between", value1, value2, "errorNum");
            return (Criteria) this;
        }

        public Criteria andScoreIsNull() {
            addCriterion("SCORE is null");
            return (Criteria) this;
        }

        public Criteria andScoreIsNotNull() {
            addCriterion("SCORE is not null");
            return (Criteria) this;
        }

        public Criteria andScoreEqualTo(BigDecimal value) {
            addCriterion("SCORE =", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotEqualTo(BigDecimal value) {
            addCriterion("SCORE <>", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreGreaterThan(BigDecimal value) {
            addCriterion("SCORE >", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SCORE >=", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLessThan(BigDecimal value) {
            addCriterion("SCORE <", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SCORE <=", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreIn(List<BigDecimal> values) {
            addCriterion("SCORE in", values, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotIn(List<BigDecimal> values) {
            addCriterion("SCORE not in", values, "score");
            return (Criteria) this;
        }

        public Criteria andScoreBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SCORE between", value1, value2, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SCORE not between", value1, value2, "score");
            return (Criteria) this;
        }

        public Criteria andExaminationLengthIsNull() {
            addCriterion("EXAMINATION_LENGTH is null");
            return (Criteria) this;
        }

        public Criteria andExaminationLengthIsNotNull() {
            addCriterion("EXAMINATION_LENGTH is not null");
            return (Criteria) this;
        }

        public Criteria andExaminationLengthEqualTo(BigDecimal value) {
            addCriterion("EXAMINATION_LENGTH =", value, "examinationLength");
            return (Criteria) this;
        }

        public Criteria andExaminationLengthNotEqualTo(BigDecimal value) {
            addCriterion("EXAMINATION_LENGTH <>", value, "examinationLength");
            return (Criteria) this;
        }

        public Criteria andExaminationLengthGreaterThan(BigDecimal value) {
            addCriterion("EXAMINATION_LENGTH >", value, "examinationLength");
            return (Criteria) this;
        }

        public Criteria andExaminationLengthGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("EXAMINATION_LENGTH >=", value, "examinationLength");
            return (Criteria) this;
        }

        public Criteria andExaminationLengthLessThan(BigDecimal value) {
            addCriterion("EXAMINATION_LENGTH <", value, "examinationLength");
            return (Criteria) this;
        }

        public Criteria andExaminationLengthLessThanOrEqualTo(BigDecimal value) {
            addCriterion("EXAMINATION_LENGTH <=", value, "examinationLength");
            return (Criteria) this;
        }

        public Criteria andExaminationLengthIn(List<BigDecimal> values) {
            addCriterion("EXAMINATION_LENGTH in", values, "examinationLength");
            return (Criteria) this;
        }

        public Criteria andExaminationLengthNotIn(List<BigDecimal> values) {
            addCriterion("EXAMINATION_LENGTH not in", values, "examinationLength");
            return (Criteria) this;
        }

        public Criteria andExaminationLengthBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EXAMINATION_LENGTH between", value1, value2, "examinationLength");
            return (Criteria) this;
        }

        public Criteria andExaminationLengthNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EXAMINATION_LENGTH not between", value1, value2, "examinationLength");
            return (Criteria) this;
        }

        public Criteria andStartTimeIsNull() {
            addCriterion("START_TIME is null");
            return (Criteria) this;
        }

        public Criteria andStartTimeIsNotNull() {
            addCriterion("START_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andStartTimeEqualTo(Date value) {
            addCriterion("START_TIME =", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeNotEqualTo(Date value) {
            addCriterion("START_TIME <>", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeGreaterThan(Date value) {
            addCriterion("START_TIME >", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("START_TIME >=", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeLessThan(Date value) {
            addCriterion("START_TIME <", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeLessThanOrEqualTo(Date value) {
            addCriterion("START_TIME <=", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeIn(List<Date> values) {
            addCriterion("START_TIME in", values, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeNotIn(List<Date> values) {
            addCriterion("START_TIME not in", values, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeBetween(Date value1, Date value2) {
            addCriterion("START_TIME between", value1, value2, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeNotBetween(Date value1, Date value2) {
            addCriterion("START_TIME not between", value1, value2, "startTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeIsNull() {
            addCriterion("END_TIME is null");
            return (Criteria) this;
        }

        public Criteria andEndTimeIsNotNull() {
            addCriterion("END_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andEndTimeEqualTo(Date value) {
            addCriterion("END_TIME =", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotEqualTo(Date value) {
            addCriterion("END_TIME <>", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeGreaterThan(Date value) {
            addCriterion("END_TIME >", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("END_TIME >=", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeLessThan(Date value) {
            addCriterion("END_TIME <", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeLessThanOrEqualTo(Date value) {
            addCriterion("END_TIME <=", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeIn(List<Date> values) {
            addCriterion("END_TIME in", values, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotIn(List<Date> values) {
            addCriterion("END_TIME not in", values, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeBetween(Date value1, Date value2) {
            addCriterion("END_TIME between", value1, value2, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotBetween(Date value1, Date value2) {
            addCriterion("END_TIME not between", value1, value2, "endTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_EXAMINATION_INFO
     *
     * @mbggenerated do_not_delete_during_merge Mon Aug 14 15:21:26 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_EXAMINATION_INFO
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}