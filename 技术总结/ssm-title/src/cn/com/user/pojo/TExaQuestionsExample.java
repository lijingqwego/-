package cn.com.user.pojo;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class TExaQuestionsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_EXA_QUESTIONS
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_EXA_QUESTIONS
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_EXA_QUESTIONS
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_QUESTIONS
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public TExaQuestionsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_QUESTIONS
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_QUESTIONS
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_QUESTIONS
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_QUESTIONS
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_QUESTIONS
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_QUESTIONS
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_QUESTIONS
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_QUESTIONS
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_QUESTIONS
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_EXA_QUESTIONS
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_EXA_QUESTIONS
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andQuestionsNoIsNull() {
            addCriterion("QUESTIONS_NO is null");
            return (Criteria) this;
        }

        public Criteria andQuestionsNoIsNotNull() {
            addCriterion("QUESTIONS_NO is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionsNoEqualTo(String value) {
            addCriterion("QUESTIONS_NO =", value, "questionsNo");
            return (Criteria) this;
        }

        public Criteria andQuestionsNoNotEqualTo(String value) {
            addCriterion("QUESTIONS_NO <>", value, "questionsNo");
            return (Criteria) this;
        }

        public Criteria andQuestionsNoGreaterThan(String value) {
            addCriterion("QUESTIONS_NO >", value, "questionsNo");
            return (Criteria) this;
        }

        public Criteria andQuestionsNoGreaterThanOrEqualTo(String value) {
            addCriterion("QUESTIONS_NO >=", value, "questionsNo");
            return (Criteria) this;
        }

        public Criteria andQuestionsNoLessThan(String value) {
            addCriterion("QUESTIONS_NO <", value, "questionsNo");
            return (Criteria) this;
        }

        public Criteria andQuestionsNoLessThanOrEqualTo(String value) {
            addCriterion("QUESTIONS_NO <=", value, "questionsNo");
            return (Criteria) this;
        }

        public Criteria andQuestionsNoLike(String value) {
            addCriterion("QUESTIONS_NO like", value, "questionsNo");
            return (Criteria) this;
        }

        public Criteria andQuestionsNoNotLike(String value) {
            addCriterion("QUESTIONS_NO not like", value, "questionsNo");
            return (Criteria) this;
        }

        public Criteria andQuestionsNoIn(List<String> values) {
            addCriterion("QUESTIONS_NO in", values, "questionsNo");
            return (Criteria) this;
        }

        public Criteria andQuestionsNoNotIn(List<String> values) {
            addCriterion("QUESTIONS_NO not in", values, "questionsNo");
            return (Criteria) this;
        }

        public Criteria andQuestionsNoBetween(String value1, String value2) {
            addCriterion("QUESTIONS_NO between", value1, value2, "questionsNo");
            return (Criteria) this;
        }

        public Criteria andQuestionsNoNotBetween(String value1, String value2) {
            addCriterion("QUESTIONS_NO not between", value1, value2, "questionsNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoIsNull() {
            addCriterion("SUBJECT_NO is null");
            return (Criteria) this;
        }

        public Criteria andSubjectNoIsNotNull() {
            addCriterion("SUBJECT_NO is not null");
            return (Criteria) this;
        }

        public Criteria andSubjectNoEqualTo(BigDecimal value) {
            addCriterion("SUBJECT_NO =", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoNotEqualTo(BigDecimal value) {
            addCriterion("SUBJECT_NO <>", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoGreaterThan(BigDecimal value) {
            addCriterion("SUBJECT_NO >", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SUBJECT_NO >=", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoLessThan(BigDecimal value) {
            addCriterion("SUBJECT_NO <", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SUBJECT_NO <=", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoIn(List<BigDecimal> values) {
            addCriterion("SUBJECT_NO in", values, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoNotIn(List<BigDecimal> values) {
            addCriterion("SUBJECT_NO not in", values, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SUBJECT_NO between", value1, value2, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SUBJECT_NO not between", value1, value2, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andQuestionsNameIsNull() {
            addCriterion("QUESTIONS_NAME is null");
            return (Criteria) this;
        }

        public Criteria andQuestionsNameIsNotNull() {
            addCriterion("QUESTIONS_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionsNameEqualTo(String value) {
            addCriterion("QUESTIONS_NAME =", value, "questionsName");
            return (Criteria) this;
        }

        public Criteria andQuestionsNameNotEqualTo(String value) {
            addCriterion("QUESTIONS_NAME <>", value, "questionsName");
            return (Criteria) this;
        }

        public Criteria andQuestionsNameGreaterThan(String value) {
            addCriterion("QUESTIONS_NAME >", value, "questionsName");
            return (Criteria) this;
        }

        public Criteria andQuestionsNameGreaterThanOrEqualTo(String value) {
            addCriterion("QUESTIONS_NAME >=", value, "questionsName");
            return (Criteria) this;
        }

        public Criteria andQuestionsNameLessThan(String value) {
            addCriterion("QUESTIONS_NAME <", value, "questionsName");
            return (Criteria) this;
        }

        public Criteria andQuestionsNameLessThanOrEqualTo(String value) {
            addCriterion("QUESTIONS_NAME <=", value, "questionsName");
            return (Criteria) this;
        }

        public Criteria andQuestionsNameLike(String value) {
            addCriterion("QUESTIONS_NAME like", value, "questionsName");
            return (Criteria) this;
        }

        public Criteria andQuestionsNameNotLike(String value) {
            addCriterion("QUESTIONS_NAME not like", value, "questionsName");
            return (Criteria) this;
        }

        public Criteria andQuestionsNameIn(List<String> values) {
            addCriterion("QUESTIONS_NAME in", values, "questionsName");
            return (Criteria) this;
        }

        public Criteria andQuestionsNameNotIn(List<String> values) {
            addCriterion("QUESTIONS_NAME not in", values, "questionsName");
            return (Criteria) this;
        }

        public Criteria andQuestionsNameBetween(String value1, String value2) {
            addCriterion("QUESTIONS_NAME between", value1, value2, "questionsName");
            return (Criteria) this;
        }

        public Criteria andQuestionsNameNotBetween(String value1, String value2) {
            addCriterion("QUESTIONS_NAME not between", value1, value2, "questionsName");
            return (Criteria) this;
        }

        public Criteria andQuestionsDescIsNull() {
            addCriterion("QUESTIONS_DESC is null");
            return (Criteria) this;
        }

        public Criteria andQuestionsDescIsNotNull() {
            addCriterion("QUESTIONS_DESC is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionsDescEqualTo(String value) {
            addCriterion("QUESTIONS_DESC =", value, "questionsDesc");
            return (Criteria) this;
        }

        public Criteria andQuestionsDescNotEqualTo(String value) {
            addCriterion("QUESTIONS_DESC <>", value, "questionsDesc");
            return (Criteria) this;
        }

        public Criteria andQuestionsDescGreaterThan(String value) {
            addCriterion("QUESTIONS_DESC >", value, "questionsDesc");
            return (Criteria) this;
        }

        public Criteria andQuestionsDescGreaterThanOrEqualTo(String value) {
            addCriterion("QUESTIONS_DESC >=", value, "questionsDesc");
            return (Criteria) this;
        }

        public Criteria andQuestionsDescLessThan(String value) {
            addCriterion("QUESTIONS_DESC <", value, "questionsDesc");
            return (Criteria) this;
        }

        public Criteria andQuestionsDescLessThanOrEqualTo(String value) {
            addCriterion("QUESTIONS_DESC <=", value, "questionsDesc");
            return (Criteria) this;
        }

        public Criteria andQuestionsDescLike(String value) {
            addCriterion("QUESTIONS_DESC like", value, "questionsDesc");
            return (Criteria) this;
        }

        public Criteria andQuestionsDescNotLike(String value) {
            addCriterion("QUESTIONS_DESC not like", value, "questionsDesc");
            return (Criteria) this;
        }

        public Criteria andQuestionsDescIn(List<String> values) {
            addCriterion("QUESTIONS_DESC in", values, "questionsDesc");
            return (Criteria) this;
        }

        public Criteria andQuestionsDescNotIn(List<String> values) {
            addCriterion("QUESTIONS_DESC not in", values, "questionsDesc");
            return (Criteria) this;
        }

        public Criteria andQuestionsDescBetween(String value1, String value2) {
            addCriterion("QUESTIONS_DESC between", value1, value2, "questionsDesc");
            return (Criteria) this;
        }

        public Criteria andQuestionsDescNotBetween(String value1, String value2) {
            addCriterion("QUESTIONS_DESC not between", value1, value2, "questionsDesc");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("CREATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("CREATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIME =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIME <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("CREATE_TIME >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIME >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterionForJDBCDate("CREATE_TIME <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIME <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterionForJDBCDate("CREATE_TIME in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("CREATE_TIME not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_TIME between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_TIME not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("UPDATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("UPDATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_TIME =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_TIME <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("UPDATE_TIME >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_TIME >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterionForJDBCDate("UPDATE_TIME <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_TIME <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATE_TIME in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATE_TIME not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATE_TIME between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATE_TIME not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_EXA_QUESTIONS
     *
     * @mbggenerated do_not_delete_during_merge Mon Aug 14 15:21:26 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_EXA_QUESTIONS
     *
     * @mbggenerated Mon Aug 14 15:21:26 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}